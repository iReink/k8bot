import asyncio
from datetime import datetime, timedelta
import random
from db import Database

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
REWARD_HOUR = 21
REWARD_MINUTE = 3

# –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ 1‚Äì5 –º–µ—Å—Ç–æ
WEEKLY_REWARDS = [5, 4, 3, 2, 1]

# --- –§—Ä–∞–∑—ã –¥–ª—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è ---
PLACE_MESSAGES = [
    "1st place ‚Äî {nick} ({count} messages, +{reward} koins)",
    "2nd place ‚Äî {nick} ({count} messages, +{reward} koins)",
    "3rd place ‚Äî {nick} ({count} messages, +{reward} koins)",
    "4th place ‚Äî {nick} ({count} messages, +{reward} koins)",
    "5th place ‚Äî {nick} ({count} messages, +{reward} koins)",
]


# --- –ö–æ—Ä—É—Ç–∏–Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã ---
async def weekly_reward_task(bot):
    db = Database()
    last_reward_date = None  # –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã

    while True:
        now = datetime.now()

        # —Å–ª–µ–¥—É—é—â–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
        reward_time = now.replace(hour=REWARD_HOUR, minute=REWARD_MINUTE, second=0, microsecond=0)
        days_ahead = 6 - reward_time.weekday()  # 0 = Monday
        if days_ahead < 0:
            days_ahead += 7
        reward_time += timedelta(days=days_ahead)

        # –µ—Å–ª–∏ —É–∂–µ –ø–æ—Å–ª–µ –Ω–∞–≥—Ä–∞–¥—ã ‚Äî –ø–µ—Ä–µ–Ω–æ—Å–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
        if now >= reward_time:
            reward_time += timedelta(weeks=1)

        # –∂–¥—ë–º –¥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–≥—Ä–∞–¥—ã
        wait_seconds = (reward_time - now).total_seconds()
        await asyncio.sleep(wait_seconds)

        # –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å
        today = datetime.now().date()
        if last_reward_date == today:
            await asyncio.sleep(60)
            continue
        last_reward_date = today

        # –¥–∏–∞–ø–∞–∑–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é
        end_time = reward_time
        start_time = end_time - timedelta(weeks=1)

        start_str = start_time.strftime("%Y-%m-%d %H:%M:%S")
        end_str = end_time.strftime("%Y-%m-%d %H:%M:%S")

        cursor = db.conn.cursor()

        # --- –¢–æ–ø-5 –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º ---
        cursor.execute("""
            SELECT u.chat_id, u.user_id, u.nick, COUNT(m.message_id) as msg_count
            FROM messages m
            JOIN users u ON m.chat_id = u.chat_id AND m.user_id = u.user_id
            WHERE m.date || ' ' || m.time BETWEEN ? AND ?
            GROUP BY u.chat_id, u.user_id
            ORDER BY msg_count DESC
            LIMIT 5
        """, (start_str, end_str))

        top_users = cursor.fetchall()

        if top_users:
            chat_id = top_users[0][0]
            await bot.send_message(chat_id, "üèÜ **Weekly activity results:**")

            for i, user in enumerate(top_users):
                if i >= len(WEEKLY_REWARDS):
                    break
                chat_id, user_id, nick, msg_count = user
                reward = WEEKLY_REWARDS[i]

                db.add_koins(chat_id, user_id, reward)
                db.log_reward(chat_id, user_id, "weekly_most_active", reward)

                message_text = PLACE_MESSAGES[i].format(
                    nick=nick, count=msg_count, reward=reward
                )
                await bot.send_message(chat_id, message_text)

        # —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–æ—Å—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
        await asyncio.sleep(60)
